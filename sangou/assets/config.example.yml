# These comments are here to get you started,
# and will go away upon setting the configuration
# for the first time. You can see these comments
# again by using the "configs stock" command.

# For any setting asking for an ID, you can put
# the name of it as well, and the bot will convert
# it to an ID automatically when you go to upload it.
# Note that it will use the first one it finds, and it is
# case-sensitive.
# For example:
# modrole: "Server Staff"

logging:
  # The bot will forward moderation actions to this channel ID.
  modlog: 
  # The bot will forward server updates to this channel ID.
  serverlog: 
  # The bot will forward user updates to this channel ID.
  userlog: 

staff:
  # The role ID for your admin role.
  adminrole: 
  # The role ID for your moderator role.
  modrole: 
  # The role ID for the Ex-Staff role, if you use one.
  exstaffrole: 
  # The role ID for bots. This will allow bots to speak during lockdowns, and in toss channels.
  botrole: 
  # The role ID for new users, if Raidmode is set to Medium.
  raidrole: 
  # The role ID for the Staff channel.
  staffchannel: 
  # The channel ID which the bot will forward watched users to.
  watchchannel: 
  # A link to your rules. You can use channels with "<#CHANNELID>",
  # but the bot will not convert a name for you.
  rulesurl: 
  # A link to appeal bans or actions. This will be forwarded to
  # the user upon being banned by the bot.
  appealurl: 
  # If you would like Staff to be notified when a user continuously reply pings someone,
  # set this to the number of times after which the bot will notify Staff. Maximum of 10.
  noreplythreshold: 

toss:
  # The role ID to add to users when performing a toss.
  tossrole: 
  # The category ID for toss sessions to be created in.
  tosscategory: 
  # The channel names that the bot will use when creating sessions.
  # You may only have up to 25.
  tosschannels:
    - 
  # The topic for each toss channel.
  tosstopic:

surveyr:
  # The channel ID that the bot will post moderation actions to.
  surveychannel: 
  # The case ID to start from, in the event that you are transitioning from a
  # previous system. If you aren't, simply leave it at 0, or 1 if you do not need a test case.
  startingcase: 
  # Pick from "ban", "unban", "kick", "softban", "timeout", "promotion", "demotion".
  loggingtypes:
    - 
  # If using "promotion" or "demotion" in Logging Types, place the role IDs you wish to monitor here.
  loggingroles:
    - 

cotd:
  # The role ID to use for a Color of The Day system.
  cotdrole: 
  # The name of the role. For example, "The Rainbow - Pale Blue", where "The Rainbow" is the role name.
  cotdname: 

reaction:
  # If the bot may pull message links and format them nicely.
  embedenable: false
  # If the bot may translate messages using reacted flags.
  translateenable: false
  # If the bot may autodelete super reactions.
  burstreactsenable: false
  # If the bot may automatically adjust names to be readable.
  autoreadableenable: false
  # If the bot may randomly laugh at users who have profile effects.
  # Some people get mad at this feature's existence for some reason.
  paidforprofileeffectsenable: false

permission_overrides:
  # Command overrides. These also manage the default role (admin / staff) for applicable roles.

  kick:
    override_role:
    # The role ID of the role you wish to grant access to this command. If this is not set, defaults to the default fallback.
    default_fallback: 1
    # 0 = Requires override role to use.
    # 1 = Requires Staff role or override role to use.
    # 2 = Requires Admin role or override role to use.

  ban:
    override_role:
    # The role ID of the role you wish to grant access to this command. If this is not set, defaults to the default fallback.
    default_fallback: 1
    # 0 = Requires override role to use.
    # 1 = Requires Staff role or override role to use.
    # 2 = Requires Admin role or override role to use.

  dban:
    override_role:
    # The role ID of the role you wish to grant access to this command. If this is not set, defaults to the default fallback.
    default_fallback: 1
    # 0 = Requires override role to use.
    # 1 = Requires Staff role or override role to use.
    # 2 = Requires Admin role or override role to use.

  massban:
    override_role:
    # The role ID of the role you wish to grant access to this command. If this is not set, defaults to the default fallback.
    default_fallback: 1
    # 0 = Requires override role to use.
    # 1 = Requires Staff role or override role to use.
    # 2 = Requires Admin role or override role to use.

  unban:
    override_role:
    # The role ID of the role you wish to grant access to this command. If this is not set, defaults to the default fallback.
    default_fallback: 1
    # 0 = Requires override role to use.
    # 1 = Requires Staff role or override role to use.
    # 2 = Requires Admin role or override role to use.

  silentban:
    override_role:
    # The role ID of the role you wish to grant access to this command. If this is not set, defaults to the default fallback.
    default_fallback: 1
    # 0 = Requires override role to use.
    # 1 = Requires Staff role or override role to use.
    # 2 = Requires Admin role or override role to use.

  msgcount:
    override_role:
    # The role ID of the role you wish to grant access to this command. If this is not set, defaults to the default fallback.
    default_fallback: 1
    # 0 = Requires override role to use.
    # 1 = Requires Staff role or override role to use.
    # 2 = Requires Admin role or override role to use.

  alert:
    override_role:
    # The role ID of the role you wish to grant access to this command. If this is not set, defaults to the default fallback.
    default_fallback: 1
    # 0 = Requires override role to use.
    # 1 = Requires Staff role or override role to use.
    # 2 = Requires Admin role or override role to use.

  purge:
    override_role:
    # The role ID of the role you wish to grant access to this command. If this is not set, defaults to the default fallback.
    default_fallback: 1
    # 0 = Requires override role to use.
    # 1 = Requires Staff role or override role to use.
    # 2 = Requires Admin role or override role to use.

  purge_bots:
    override_role:
    # The role ID of the role you wish to grant access to this command. If this is not set, defaults to the default fallback.
    default_fallback: 1
    # 0 = Requires override role to use.
    # 1 = Requires Staff role or override role to use.
    # 2 = Requires Admin role or override role to use.

  purge_from:
    override_role:
    # The role ID of the role you wish to grant access to this command. If this is not set, defaults to the default fallback.
    default_fallback: 1
    # 0 = Requires override role to use.
    # 1 = Requires Staff role or override role to use.
    # 2 = Requires Admin role or override role to use.

  purge_with:
    override_role:
    # The role ID of the role you wish to grant access to this command. If this is not set, defaults to the default fallback.
    default_fallback: 1
    # 0 = Requires override role to use.
    # 1 = Requires Staff role or override role to use.
    # 2 = Requires Admin role or override role to use.

  purge_emotes:
    override_role:
    # The role ID of the role you wish to grant access to this command. If this is not set, defaults to the default fallback.
    default_fallback: 1
    # 0 = Requires override role to use.
    # 1 = Requires Staff role or override role to use.
    # 2 = Requires Admin role or override role to use.

  purge_embeds:
    override_role:
    # The role ID of the role you wish to grant access to this command. If this is not set, defaults to the default fallback.
    default_fallback: 1
    # 0 = Requires override role to use.
    # 1 = Requires Staff role or override role to use.
    # 2 = Requires Admin role or override role to use.

  purge_reacts: # alias: reactions
    override_role:
    # The role ID of the role you wish to grant access to this command. If this is not set, defaults to the default fallback.
    default_fallback: 1
    # 0 = Requires override role to use.
    # 1 = Requires Staff role or override role to use.
    # 2 = Requires Admin role or override role to use.

  warn:
    override_role:
    # The role ID of the role you wish to grant access to this command. If this is not set, defaults to the default fallback.
    default_fallback: 1
    # 0 = Requires override role to use.
    # 1 = Requires Staff role or override role to use.
    # 2 = Requires Admin role or override role to use.

  note: # alias: addnote
    override_role:
    # The role ID of the role you wish to grant access to this command. If this is not set, defaults to the default fallback.
    default_fallback: 1
    # 0 = Requires override role to use.
    # 1 = Requires Staff role or override role to use.
    # 2 = Requires Admin role or override role to use.

  say: # alias: echo
    override_role:
    # The role ID of the role you wish to grant access to this command. If this is not set, defaults to the default fallback.
    default_fallback: 2
    # 0 = Requires override role to use.
    # 1 = Requires Staff role or override role to use.
    # 2 = Requires Admin role or override role to use.

  speak: # alias: send
    override_role:
    # The role ID of the role you wish to grant access to this command. If this is not set, defaults to the default fallback.
    default_fallback: 2
    # 0 = Requires override role to use.
    # 1 = Requires Staff role or override role to use.
    # 2 = Requires Admin role or override role to use.

  reply:
    override_role:
    # The role ID of the role you wish to grant access to this command. If this is not set, defaults to the default fallback.
    default_fallback: 2
    # 0 = Requires override role to use.
    # 1 = Requires Staff role or override role to use.
    # 2 = Requires Admin role or override role to use.

  react:
    override_role:
    # The role ID of the role you wish to grant access to this command. If this is not set, defaults to the default fallback.
    default_fallback: 2
    # 0 = Requires override role to use.
    # 1 = Requires Staff role or override role to use.
    # 2 = Requires Admin role or override role to use.

  typing:
    override_role:
    # The role ID of the role you wish to grant access to this command. If this is not set, defaults to the default fallback.
    default_fallback: 2
    # 0 = Requires override role to use.
    # 1 = Requires Staff role or override role to use.
    # 2 = Requires Admin role or override role to use.

  archives:
    override_role:
      # The role ID of the role you wish to grant access to this command. If this is not set, defaults to the default fallback.
    default_fallback: 1
    # 0 = Requires override role to use.
    # 1 = Requires Staff role or override role to use.
    # 2 = Requires Admin role or override role to use.

  open:
    override_role:
      # The role ID of the role you wish to grant access to this command. If this is not set, defaults to the default fallback.
    default_fallback: 1
    # 0 = Requires override role to use.
    # 1 = Requires Staff role or override role to use.
    # 2 = Requires Admin role or override role to use.

  trace:
    override_role:
      # The role ID of the role you wish to grant access to this command. If this is not set, defaults to the default fallback.
    default_fallback: 1
    # 0 = Requires override role to use.
    # 1 = Requires Staff role or override role to use.
    # 2 = Requires Admin role or override role to use.

  orbitlog:
    override_role:
    # The role ID of the role you wish to grant access to this command. If this is not set, defaults to the default fallback.
    default_fallback: 2
    # 0 = Requires override role to use.
    # 1 = Requires Staff role or override role to use.
    # 2 = Requires Admin role or override role to use.

  lock:
    override_role:
      # The role ID of the role you wish to grant access to this command. If this is not set, defaults to the default fallback.
    default_fallback: 1
    # 0 = Requires override role to use.
    # 1 = Requires Staff role or override role to use.
    # 2 = Requires Admin role or override role to use.

  logs:
    override_role:
    # The role ID of the role you wish to grant access to this command. If this is not set, defaults to the default fallback.
    default_fallback: 1
    # 0 = Requires override role to use.
    # 1 = Requires Staff role or override role to use.
    # 2 = Requires Admin role or override role to use.

  notes:
    override_role:
    # The role ID of the role you wish to grant access to this command. If this is not set, defaults to the default fallback.
    default_fallback: 1
    # 0 = Requires override role to use.
    # 1 = Requires Staff role or override role to use.
    # 2 = Requires Admin role or override role to use.

  clearevents:
    override_role:
    # The role ID of the role you wish to grant access to this command. If this is not set, defaults to the default fallback.
    default_fallback: 2
    # 0 = Requires override role to use.
    # 1 = Requires Staff role or override role to use.
    # 2 = Requires Admin role or override role to use.

  delevent:
    override_role:
    # The role ID of the role you wish to grant access to this command. If this is not set, defaults to the default fallback.
    default_fallback: 2
    # 0 = Requires override role to use.
    # 1 = Requires Staff role or override role to use.
    # 2 = Requires Admin role or override role to use.

  raidmode:
    override_role:
    # The role ID of the role you wish to grant access to this command. If this is not set, defaults to the default fallback.
    default_fallback: 1
    # 0 = Requires override role to use.
    # 1 = Requires Staff role or override role to use.
    # 2 = Requires Admin role or override role to use.

  timeban:
    override_role:
    # The role ID of the role you wish to grant access to this command. If this is not set, defaults to the default fallback.
    default_fallback: 1
    # 0 = Requires override role to use.
    # 1 = Requires Staff role or override role to use.
    # 2 = Requires Admin role or override role to use.

  tossed: # alias: session
    override_role:
    # The role ID of the role you wish to grant access to this command. If this is not set, defaults to the default fallback.
    default_fallback: 1
    # 0 = Requires override role to use.
    # 1 = Requires Staff role or override role to use.
    # 2 = Requires Admin role or override role to use.

  toss: # alias: roleban
    override_role:
    # The role ID of the role you wish to grant access to this command. If this is not set, defaults to the default fallback.
    default_fallback: 1
    # 0 = Requires override role to use.
    # 1 = Requires Staff role or override role to use.
    # 2 = Requires Admin role or override role to use.

  untoss: # alias: unroleban
    override_role:
    # The role ID of the role you wish to grant access to this command. If this is not set, defaults to the default fallback.
    default_fallback: 1
    # 0 = Requires override role to use.
    # 1 = Requires Staff role or override role to use.
    # 2 = Requires Admin role or override role to use.

  close:
    override_role:
    # The role ID of the role you wish to grant access to this command. If this is not set, defaults to the default fallback.
    default_fallback: 1
    # 0 = Requires override role to use.
    # 1 = Requires Staff role or override role to use.
    # 2 = Requires Admin role or override role to use.

  watch:
    override_role:
    # The role ID of the role you wish to grant access to this command. If this is not set, defaults to the default fallback.
    default_fallback: 1
    # 0 = Requires override role to use.
    # 1 = Requires Staff role or override role to use.
    # 2 = Requires Admin role or override role to use.

  unwatch:
    override_role:
    # The role ID of the role you wish to grant access to this command. If this is not set, defaults to the default fallback.
    default_fallback: 1
    # 0 = Requires override role to use.
    # 1 = Requires Staff role or override role to use.
    # 2 = Requires Admin role or override role to use.

  reroll:
    override_role:
    # The role ID of the role you wish to grant access to this command. If this is not set, defaults to the default fallback.
    default_fallback: 1
    # 0 = Requires override role to use.
    # 1 = Requires Staff role or override role to use.
    # 2 = Requires Admin role or override role to use.

  snipe:
    override_role:
    # The role ID of the role you wish to grant access to this command. If this is not set, defaults to the default fallback.
    default_fallback: 1
    # 0 = Requires override role to use.
    # 1 = Requires Staff role or override role to use.
    # 2 = Requires Admin role or override role to use.

  snipf: # sniped so hard they spilled coffee.
    override_role:
    # The role ID of the role you wish to grant access to this command. If this is not set, defaults to the default fallback.
    default_fallback: 1
    # 0 = Requires override role to use.
    # 1 = Requires Staff role or override role to use.
    # 2 = Requires Admin role or override role to use.

metadata:
  version: 5